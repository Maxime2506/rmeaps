// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// meaps
List meaps(const IntegerVector jr_dist, const IntegerVector p_dist, const NumericVector xr_dist, const NumericVector emplois, const NumericVector actifs, const NumericVector fuites, const NumericVector parametres, const std::string attraction, const Nullable<IntegerVector> group_from, const Nullable<IntegerVector> group_to, const Nullable<NumericVector> cible, const int nthreads, const bool verbose);
RcppExport SEXP _rmeaps_meaps(SEXP jr_distSEXP, SEXP p_distSEXP, SEXP xr_distSEXP, SEXP emploisSEXP, SEXP actifsSEXP, SEXP fuitesSEXP, SEXP parametresSEXP, SEXP attractionSEXP, SEXP group_fromSEXP, SEXP group_toSEXP, SEXP cibleSEXP, SEXP nthreadsSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerVector >::type jr_dist(jr_distSEXP);
    Rcpp::traits::input_parameter< const IntegerVector >::type p_dist(p_distSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type xr_dist(xr_distSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type emplois(emploisSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type actifs(actifsSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type fuites(fuitesSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type parametres(parametresSEXP);
    Rcpp::traits::input_parameter< const std::string >::type attraction(attractionSEXP);
    Rcpp::traits::input_parameter< const Nullable<IntegerVector> >::type group_from(group_fromSEXP);
    Rcpp::traits::input_parameter< const Nullable<IntegerVector> >::type group_to(group_toSEXP);
    Rcpp::traits::input_parameter< const Nullable<NumericVector> >::type cible(cibleSEXP);
    Rcpp::traits::input_parameter< const int >::type nthreads(nthreadsSEXP);
    Rcpp::traits::input_parameter< const bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(meaps(jr_dist, p_dist, xr_dist, emplois, actifs, fuites, parametres, attraction, group_from, group_to, cible, nthreads, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rmeaps_meaps", (DL_FUNC) &_rmeaps_meaps, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_rmeaps(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
